{"version":3,"sources":["components/TodoForm/TodoForm.jsx","components/TodoForm/index.js","components/TodoItem/TodoItem.jsx","components/TodoItem/index.js","components/App/index.js","components/App/App.jsx","index.jsx"],"names":["useStyles","makeStyles","container","display","alignItems","button","height","marginLeft","TodoForm","props","handleSubmit","handleChange","values","classes","onSubmit","Container","className","TextField","name","variant","margin","value","text","onChange","Button","size","type","card","marginTop","deleteIcon","TodoItem","onRemove","classNames","Card","CardContent","Typography","gutterBottom","CardActions","IconButton","onClick","icon","App","useState","todos","setTodos","onTodoRemove","index","filter","t","id","initialValues","render","resetForm","undefined","length","map","todo","key","bind","document","getElementById"],"mappings":"wQAOMA,EAAYC,aAAW,iBAAO,CAChCC,UAAW,CACPC,QAAS,OACTC,WAAY,UAEhBC,OAAQ,CACJC,OAAQ,OACRC,WAAY,QCZLC,EDgBS,SAACC,GAAW,IACxBC,EAAuCD,EAAvCC,aAAcC,EAAyBF,EAAzBE,aAAcC,EAAWH,EAAXG,OAC9BC,EAAUb,IAEhB,OACI,0BAAMc,SAAUJ,GACZ,kBAACK,EAAA,EAAD,CAAWC,UAAWH,EAAQX,WAC1B,kBAACe,EAAA,EAAD,CACID,UAAU,kBACVE,KAAK,OACLC,QAAQ,WACRC,OAAO,QACPC,MAAOT,EAAOU,KACdC,SAAUZ,IAEd,kBAACa,EAAA,EAAD,CACIR,UAAWH,EAAQR,OACnBc,QAAQ,YACRM,KAAK,QACLC,KAAK,UACL,kBAAC,IAAD,MALJ,U,+EEvBV1B,EAAYC,aAAW,iBAAO,CAClC0B,KAAM,CACJC,UAAW,IAEbC,WAAY,CACVtB,WAAY,YCbDuB,EDiBS,SAACrB,GAAW,IACzBa,EAAkBb,EAAlBa,KAAMS,EAAYtB,EAAZsB,SACPlB,EAAUb,IACVgB,EAAYgB,IAAWnB,EAAQc,KAAM,aAE3C,OACI,kBAACM,EAAA,EAAD,CACIjB,UAAWA,GACX,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,cAAY,GACnBd,IAGT,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYb,KAAK,QAAQc,QAASR,EAAWf,UAAWH,EAAQgB,YAC5D,kBAAC,IAAD,CAAmBb,UAAWH,EAAQ2B,WEhC3CC,G,MCKH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,KAgBVC,EAAe,SAACC,GACpBF,EAASD,EAAMI,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,OAGtC,OACE,kBAAC/B,EAAA,EAAD,KACE,kBAAC,IAAD,CACEmC,cAAe,CAAE5B,KAAM,IACvB6B,OAAQ,SAAA1C,GAAK,OAAK,kBAAC,EAAaA,IAChCK,SAtBe,SAACF,EAAD,GAA0B,IAAhBwC,EAAe,EAAfA,UACrB9B,EAASV,EAATU,UACK+B,IAAT/B,GAA+B,KAATA,IACxBsB,EAAS,GAAD,mBACHD,GADG,CACI,CACRM,GAAIN,EAAMW,OACVhC,WAGJ8B,QAeA,kBAACrC,EAAA,EAAD,KACG4B,EAAMY,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAKP,GACV3B,KAAMkC,EAAKlC,KACXS,SAAUc,EAAaa,KAAK,KAAMF,EAAKP,aCnCnDE,iBAAO,kBAAC,EAAD,MAAUQ,SAASC,eAAe,W","file":"static/js/main.13ac9ec4.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    button: {\n        height: \"auto\",\n        marginLeft: 20,\n    },\n}));\n\nexport const TodoForm = (props) => {\n    const { handleSubmit, handleChange, values } = props;\n    const classes = useStyles();\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Container className={classes.container}>\n                <TextField\n                    className=\"todo-text-field\"\n                    name=\"text\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    value={values.text}\n                    onChange={handleChange}\n                />\n                <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    size=\"large\"\n                    type=\"submit\">\n                    <SaveIcon />\n                        Add\n                    </Button>\n\n            </Container>\n        </form>\n    )\n};\n","import { TodoForm } from './TodoForm';\n\nexport default TodoForm;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    marginTop: 20,\n  },\n  deleteIcon: {\n    marginLeft: \"auto\",\n  }\n}));\n\nexport const TodoItem = (props) => {\n    const {text, onRemove} = props;\n    const classes = useStyles();\n    const className = classNames(classes.card, 'todo-item');\n\n    return (\n        <Card\n            className={className}>\n            <CardContent>\n                <Typography gutterBottom>\n                    {text}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <IconButton size=\"small\" onClick={onRemove}  className={classes.deleteIcon}>\n                    <DeleteForeverIcon className={classes.icon} />\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n};\n","import { TodoItem } from './TodoItem';\n\nexport default TodoItem;","import App from './App';\n\nexport default App;","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport Container from '@material-ui/core/Container';\nimport TodoForm from '../TodoForm';\nimport TodoItem from '../TodoItem';\nimport './App.css';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  const onFormSubmit = (values, {resetForm}) => {\n    const { text } = values;\n    if (text !== undefined && text !== '') {\n      setTodos([\n        ...todos, {\n          id: todos.length,\n          text\n        }\n      ]);\n      resetForm();\n    }\n  };\n\n  const onTodoRemove = (index) => {\n    setTodos(todos.filter(t => t.id !== index));\n  }\n\n  return (\n    <Container >\n      <Formik\n        initialValues={{ text: '' }}\n        render={props => (<TodoForm {...props} />)}\n        onSubmit={onFormSubmit}\n      />\n      <Container>\n        {todos.map(todo =>\n          <TodoItem\n            key={todo.id}\n            text={todo.text}\n            onRemove={onTodoRemove.bind(null, todo.id)}\n          />\n        )}\n      </Container>\n  </Container>\n  )\n\n};\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\n\nrender(<App />,  document.getElementById('root'));"],"sourceRoot":""}