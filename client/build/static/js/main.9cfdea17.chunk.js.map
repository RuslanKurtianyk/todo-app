{"version":3,"sources":["utils/history.js","config.js","utils/serverResponse.js","services/auth.js","components/PrivateRoute/index.js","components/PrivateRoute/PrivateRoute.jsx","components/TodoForm/TodoForm.jsx","components/TodoForm/index.js","components/TodoItem/TodoItem.jsx","components/TodoItem/index.js","utils/headers.js","services/todo.js","components/Home/index.js","components/Home/Home.jsx","components/LoginPage/LoginPage.jsx","components/App/index.js","components/App/App.jsx","index.jsx"],"names":["history","createBrowserHistory","config","apiUrl","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","authService","logout","window","location","reload","error","message","statusText","Promise","reject","currentToken","BehaviorSubject","localStorage","getItem","login","username","password","searchParams","URLSearchParams","set","requestOptions","method","headers","body","fetch","setItem","stringify","token","next","removeItem","asObservable","value","PrivateRoute","Component","component","rest","render","props","currentTokenValue","to","pathname","state","from","useStyles","makeStyles","container","display","alignItems","button","height","marginLeft","TodoForm","handleSubmit","handleChange","values","classes","onSubmit","Container","className","TextField","name","variant","margin","onChange","Button","size","type","card","marginTop","deleteIcon","TodoItem","onRemove","classNames","Card","CardContent","Typography","gutterBottom","CardActions","IconButton","onClick","icon","appendAccessHeader","options","nextOptions","Object","assign","saveTodo","a","getTodos","todoService","deleteTodo","todoId","Home","useState","todos","setTodos","onTodoRemove","index","filter","t","id","initialValues","resetForm","undefined","length","map","todo","key","bind","LoginPage","push","setStatus","setSubmitting","user","isSubmitting","htmlFor","disabled","React","App","setCurrentToken","useEffect","subscribe","x","unsubscribe","exact","path","style","width","justifyContent","document","getElementById"],"mappings":"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","file":"static/js/main.9cfdea17.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","const config = {\n  apiUrl: 'https://localhost:443'\n};\n\nexport default config;","import { authService } from '../services/auth';\n\nexport const handleResponse = (response) => {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                authService.logout();\n                window.location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","import { BehaviorSubject } from 'rxjs';\n\nimport config from '../config';\nimport { handleResponse } from '../utils/serverResponse';\n\nconst currentToken = new BehaviorSubject(JSON.parse(localStorage.getItem('token')));\n\nconst login = (username, password) => {\n    const searchParams = new URLSearchParams();\n    searchParams.set('username', username);\n    searchParams.set('password', password);\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: searchParams\n    };\n\n    return fetch(`${config.apiUrl}/login`, requestOptions)\n        .then(handleResponse)\n        .then(response => {\n            localStorage.setItem('token', JSON.stringify(response.token));\n            currentToken.next(response.token);\n            return response.token;\n        });\n}\n\nconst logout = () => {\n    return fetch(`${config.apiUrl}/logout`).then(() => {\n        localStorage.removeItem('token');\n        currentToken.next(null);\n    });\n}\n\nexport const authService = {\n    login,\n    logout,\n    currentToken: currentToken.asObservable(),\n    get currentTokenValue () { return currentToken.value }\n};","import { PrivateRoute } from './PrivateRoute';\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authService } from '../../services/auth';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        const token = authService.currentTokenValue;\n        if (!token) {\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n\n        return <Component {...props} />\n    }} />\n)","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    button: {\n        height: \"auto\",\n        marginLeft: 20,\n    },\n}));\n\nexport const TodoForm = (props) => {\n    const { handleSubmit, handleChange, values } = props;\n    const classes = useStyles();\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Container className={classes.container}>\n                <TextField\n                    className=\"todo-text-field\"\n                    name=\"text\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    value={values.text}\n                    onChange={handleChange}\n                />\n                <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    size=\"large\"\n                    type=\"submit\">\n                    <SaveIcon />\n                        Add\n                    </Button>\n\n            </Container>\n        </form>\n    )\n};\n","import { TodoForm } from './TodoForm';\n\nexport default TodoForm;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    marginTop: 20,\n  },\n  deleteIcon: {\n    marginLeft: \"auto\",\n  }\n}));\n\nexport const TodoItem = (props) => {\n    const {text, onRemove} = props;\n    const classes = useStyles();\n    const className = classNames(classes.card, 'todo-item');\n\n    return (\n        <Card\n            className={className}>\n            <CardContent>\n                <Typography gutterBottom>\n                    {text}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <IconButton size=\"small\" onClick={onRemove}  className={classes.deleteIcon}>\n                    <DeleteForeverIcon className={classes.icon} />\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n};\n","import { TodoItem } from './TodoItem';\n\nexport default TodoItem;","import { authService } from '../services/auth';\n\nexport const appendAccessHeader = (options) => {\n  const nextOptions = Object.assign({}, options);\n  nextOptions.headers['x-access-token'] = authService.currentTokenValue;\n  return nextOptions;\n}\n","import config from '../config';\nimport { handleResponse } from '../utils/serverResponse';\nimport { appendAccessHeader } from '../utils/headers';\n\nconst saveTodo = async (text) => {\n    const searchParams = new URLSearchParams();\n    searchParams.set('text', text);\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: searchParams\n    };\n    const options = appendAccessHeader(requestOptions);\n\n    return fetch(`${config.apiUrl}/todos`, options)\n      .then(handleResponse);\n}\n\nconst getTodos = async () => {\n    return fetch(`${config.apiUrl}/todos`)\n      .then(handleResponse);\n}\n\nconst deleteTodo = async (todoId) => {\n  return fetch(`${config.apiUrl}/todos/${todoId}`, \n    {\n      method: 'DELETE',\n    })\n    .then(handleResponse);\n}\n\nexport const todoService = {\n  saveTodo,\n  deleteTodo,\n  getTodos\n};","import Home from './Home';\n\nexport default Home;","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport Container from '@material-ui/core/Container';\nimport TodoForm from '../TodoForm';\nimport TodoItem from '../TodoItem';\nimport { todoService } from \"../../services/todo\";\nimport './Home.css';\n\nconst Home = () => {\n  const [todos, setTodos] = useState([]);\n\n  const onFormSubmit = (values, {resetForm}) => {\n    const { text } = values;\n    todoService.saveTodo(text).then(() => {\n      if (text !== undefined && text !== '') {\n        setTodos([\n          ...todos, {\n            id: todos.length,\n            text\n          }\n        ]);\n        resetForm();\n      }\n    });\n  };\n\n  const onTodoRemove = (index) => {\n    setTodos(todos.filter(t => t.id !== index));\n  }\n\n  return (\n    <Container >\n      <Formik\n        initialValues={{ text: '' }}\n        render={props => (<TodoForm {...props} />)}\n        onSubmit={onFormSubmit}\n      />\n      <Container>\n        {todos.map(todo =>\n          <TodoItem\n            key={todo.id}\n            text={todo.text}\n            onRemove={onTodoRemove.bind(null, todo.id)}\n          />\n        )}\n      </Container>\n  </Container>\n  )\n\n};\n\nexport default Home;","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { authService } from '../../services/auth';\nimport './LoginPage.css';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (authService.currentTokenValue) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Formik\n          initialValues={{\n            username: '',\n            password: ''\n          }}\n          onSubmit={({ username, password }, { setStatus, setSubmitting }) => {\n            setStatus();\n            authService.login(username, password).then(\n              user => {\n                const { from } = this.props.location.state || {\n                  from: { pathname: '/' }\n                };\n                this.props.history.push(from);\n              },\n              error => {\n                setSubmitting(false);\n                setStatus(error);\n              }\n            );\n          }}\n          render={({ isSubmitting }) => (\n            <Form>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Field\n                  name=\"username\"\n                  type=\"text\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  disabled={isSubmitting}\n                >\n                  Login\n                </button>\n              </div>\n            </Form>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;","import { App } from './App';\n\nexport default App;","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { history } from \"../../utils/history\";\nimport { authService } from \"../../services/auth\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport Home from \"../Home\";\nimport LoginPage from \"../LoginPage/LoginPage\";\n\nconst App = () => {\n  const [currentToken, setCurrentToken] = useState(null);\n\n  useEffect(() => {\n    const subscription = authService.currentToken.subscribe(x => {\n      setCurrentToken(x);\n    });\n    return subscription.unsubscribe();\n  }, []);\n\n  const logout = async () => {\n    await authService.logout();\n    history.push('/login');\n  };\n\n  return (\n    <Router history={history}>\n      <div>\n        <div className=\"jumbotron\">\n          {currentToken && (\n            <IconButton size=\"small\" onClick={logout}>\n              <ExitToAppIcon />\n            </IconButton>\n          )}\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3\">\n                <PrivateRoute exact path=\"/\" component={Home} />\n                <div\n                  style={{\n                    display: \"flex\",\n                    width: \"100%\",\n                    height: \"calc(100vh - 100px)\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                  }}\n                >\n                  <Route path=\"/login\" component={LoginPage} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport { App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\n\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}